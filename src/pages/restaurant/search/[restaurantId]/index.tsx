import { type NextPage } from "next";
import Head from "next/head";

import { useRouter } from "next/router";
import Navbar from "../../../../components/Navbar";
import { api } from "../../../../utils/api";

export interface IRestaurantData {
  cityName: string;
  cuisine: string;
  email: string;
  hoursInterval: string;
  id: number;
  phone: string;
  name: string;
  stateName: string;
  website: string;
  zipCode: string;
  address: string;
}

const SingleRestaurant: NextPage = () => {
  const router = useRouter();

  const createRestaurant = api.restaurant.createRestaurant.useMutation();
  const { restaurantId } = router.query;
  const restaurantJSON: string | null =
    window.localStorage.getItem("restaurants");

  const singleResraurantData: IRestaurantData | null = JSON.parse(
    restaurantJSON ? restaurantJSON : ""
  ).find((elem: IRestaurantData) => {
    return elem.id === Number(restaurantId);
  });

  //   const createComment = api.comment.createComment.useMutation();
  //   const createFavorite = api.favorite.createFavorite.useMutation();
  //   const deleteFavorite = api.favorite.delete.useMutation();
  //   const isFavorited = api.favorite.isRestaurantFavorited.useQuery({
  //     restaurantId: String(restaurantId),
  //   });

  //   const handleFavorite = (e: React.SyntheticEvent<HTMLButtonElement>) => {
  //     e.preventDefault();
  //     createFavorite.mutate(
  //       { placement: 1, restaurantId: String(restaurantId) },
  //       {
  //         async onSuccess() {
  //           await isFavorited.refetch();
  //         },
  //       }
  //     );
  //   };
  //   const handleUnfavorite = (e: React.SyntheticEvent<HTMLButtonElement>) => {
  //     e.preventDefault();
  //     deleteFavorite.mutate(
  //       { restaurantId: String(restaurantId) },
  //       {
  //         async onSuccess() {
  //           await isFavorited.refetch();
  //         },
  //       }
  //     );
  //   };
  const handleSaveRestaurantData = (
    e: React.SyntheticEvent<HTMLButtonElement>
  ) => {
    e.preventDefault();
    createRestaurant.mutate(
      {
        name: singleResraurantData?.name ? singleResraurantData?.name : "",
        cityName: singleResraurantData?.cityName
          ? singleResraurantData?.cityName
          : "",
        address: singleResraurantData?.address
          ? singleResraurantData?.address
          : "",

        stateName: singleResraurantData?.stateName
          ? singleResraurantData?.stateName
          : "",
        zipCode: singleResraurantData?.zipCode
          ? singleResraurantData?.zipCode
          : "",
        email: singleResraurantData?.email ? singleResraurantData?.email : "",
        phone: singleResraurantData?.phone ? singleResraurantData?.phone : "",
        website: singleResraurantData?.website
          ? singleResraurantData?.website
          : "",
        hoursInterval: singleResraurantData?.hoursInterval
          ? singleResraurantData?.hoursInterval
          : "",
        cuisineType: singleResraurantData?.cuisine
          ? singleResraurantData?.cuisine
          : "",
      },
      {
        onSuccess() {
          console.log("restaurant added to db");
        },
      }
    );
  };

  return (
    <>
      <Head>
        <title>Foodly</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Navbar />
        <div>
          <div className="flex flex-col">
            <span className="text-lg">single restaurant page</span>
            <div>{singleResraurantData?.name}</div>
            <div>{singleResraurantData?.cuisine}</div>
            <button onClick={handleSaveRestaurantData}>add to db</button>
          </div>
        </div>
      </main>
    </>
  );
};

export default SingleRestaurant;
