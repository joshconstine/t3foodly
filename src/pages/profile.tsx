import { type NextPage } from "next";
import Head from "next/head";
import { api } from "../utils/api";
import Image from "next/image";
import Favorite from "./user/[userId]/Favorite";
import Layout from "../components/Layout";
import { useState } from "react";

const Profile: NextPage = () => {
  const user = api.user.getUser.useQuery();
  const updateUsername = api.user.updateUsername.useMutation();
  const [isEditMode, setIsEditMode] = useState(false);
  const favorites = api.favorite.getByUserId.useQuery({
    id: String(user.data?.id),
  });

  const handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {
    e.preventDefault();
    const form = e.currentTarget;
    const formElements = form.elements as typeof form.elements & {
      newUsername: { value: string };
    };
    updateUsername.mutate(
      { username: formElements.newUsername.value },
      {
        async onSuccess() {
          await user.refetch();
        },
      }
    );
    setIsEditMode(false);
  };
  return (
    <>
      <Head>
        <title>Foodly</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="container mx-auto px-4 py-10">
          <div className="-mx-4 flex flex-wrap">
            <div className="mb-4 w-full px-4 md:w-1/3">
              <div className="overflow-hidden rounded-lg bg-white shadow-lg">
                <img
                  className="w-full"
                  src={user.data?.image || ""}
                  alt="Profile Image"
                />
                <div className="p-4">
                  <h3 className="mb-2 text-xl font-bold">
                    {user.data?.username}
                  </h3>
                  <button onClick={() => setIsEditMode(true)}>edit</button>
                  {isEditMode && (
                    <form
                      onSubmit={handleSubmit}
                      className="flex w-48 flex-col"
                    >
                      <input
                        name="newUsername"
                        className="border-2 bg-gray-200"
                      ></input>
                      <button className="border-2 bg-gray-200" type="submit">
                        Save
                      </button>{" "}
                      <button
                        className="border-2 bg-gray-200"
                        onClick={() => setIsEditMode(false)}
                      >
                        cancel
                      </button>
                    </form>
                  )}
                  <p className="mb-2 text-gray-700">
                    Email: {user.data?.email}
                  </p>
                </div>
              </div>
            </div>
            <div className="w-full px-4 md:w-2/3">
              <div className="overflow-hidden rounded-lg bg-white shadow-lg">
                <div className="p-4">
                  <h3 className="mb-2 text-xl font-bold">Favorites</h3>
                  <div>
                    {favorites.data?.map((elem: any) => {
                      return (
                        <Favorite
                          key={elem.id}
                          restaurantId={elem.restaurant_id}
                        />
                      );
                    })}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </Layout>
    </>
  );
};

export default Profile;
