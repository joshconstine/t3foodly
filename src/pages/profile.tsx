import { type NextPage } from "next";
import Head from "next/head";
import { api } from "../utils/api";
import Image from "next/image";
import Favorite from "./user/[userId]/Favorite";
import Layout from "../components/Layout";

const Profile: NextPage = () => {
  const user = api.user.getUser.useQuery();
  const updateUsername = api.user.updateUsername.useMutation();
  const favorites = api.favorite.getByUserId.useQuery({
    id: String(user.data?.id),
  });

  const handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {
    e.preventDefault();
    const form = e.currentTarget;
    const formElements = form.elements as typeof form.elements & {
      newUsername: { value: string };
    };
    updateUsername.mutate(
      { username: formElements.newUsername.value },
      {
        async onSuccess() {
          await user.refetch();
        },
      }
    );
  };
  return (
    <>
      <Head>
        <title>Foodly</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="flex flex-col gap-4 ">
          <h1>profile</h1>
          {user?.data?.image && (
            <Image src={user?.data?.image} alt="img" width={64} height={64} />
          )}
          <div>email: {user.data?.email}</div>
          {user.data?.username ? <>username: {user.data.username}</> : <></>}
          <div>Favorites</div>
          {favorites.data?.map((elem) => {
            return <Favorite key={elem.id} restaurantId={elem.restaurant_id} />;
          })}
          <form onSubmit={handleSubmit} className="flex w-48 flex-col">
            <input name="newUsername" className="border-2 bg-gray-200"></input>
            <button className="border-2 bg-gray-200" type="submit">
              make userName
            </button>
          </form>
        </div>
      </Layout>
    </>
  );
};

export default Profile;
