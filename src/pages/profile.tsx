import { type NextPage } from "next";
import Head from "next/head";
import Navbar from "../components/Navbar";
import { api } from "../utils/api";
import Image from "next/image";

const Profile: NextPage = () => {
    const user = api.user.getUser.useQuery();
    const updateUsername = api.user.updateUsername.useMutation()

    const handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {
        e.preventDefault()
        const form = e.currentTarget
        const formElements = form.elements as typeof form.elements & {
            newUsername: { value: string }
        }
        updateUsername.mutate({ username: formElements.newUsername.value }, {
            async onSuccess() {
                await user.refetch()
            }
        })

    }
    return (
        <>
            <Head>
                <title>Foodly</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main >
                <Navbar />
                <div className="flex flex-col">
                    <h1>
                        profile
                    </h1>
                    {user?.data?.image && (

                        <Image src={user?.data?.image} alt='img' width={64} height={64} />
                    )}
                    <div>

                        email: {user.data?.email}
                    </div>
                    <div>

                        {user.data?.username ? <>
                            username: {user.data.username}
                        </>
                            : <></>}
                        <form onSubmit={handleSubmit} className='flex flex-col w-48'>
                            <input name="newUsername" className="bg-gray-200 border-2"></input><button className='bg-gray-200 border-2' type="submit">make userName</button>
                        </form>
                    </div>
                </div>
            </main>
        </>
    );

};


export default Profile;


